[{"path":[]},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to gtreg","title":"Contributing to gtreg","text":"outlines propose change gtreg. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to gtreg","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to gtreg","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to gtreg","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"shannonpileggi/gtreg\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to gtreg","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to gtreg","text":"Please note gtreg project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://shannonpileggi.github.io/gtreg/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://shannonpileggi.github.io/gtreg/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with gtreg","title":"Getting help with gtreg","text":"Thanks using gtreg! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with gtreg","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with gtreg","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with gtreg","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Adverse Event Counting Methods","text":"","code":"# install.packages(\"gtreg\") library(gtreg)"},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Adverse Event Counting Methods","text":"Reporting adverse events regulatory agencies typically employs standardized terminology specific counting methods adverse events.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"standardized-terminology","dir":"Articles","previous_headings":"","what":"Standardized Terminology","title":"Adverse Event Counting Methods","text":"Providing standardized terminology scope package. Standardized terminology adheres hierarchy terms specific general, discussed MedDRA Hierarchy documentation. {gtreg}, facilitate reporting single term (.e., ae, adverse event), lower level term within higher level term (.e., ae within soc, system organ class).","code":""},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example Data","title":"Adverse Event Counting Methods","text":"Data typically recorded long format multiple rows per subject. Events can reported time, multiple time points per subject multiple events per time point possible. possible grade event missing.","code":"dat <- tibble::tribble(     ~subject, ~visit,  ~soc, ~ae, ~grade,     # Subject 1 ----------------------------------------------------------------     \"001\", 1, \"Eye disorders\", \"Eye irritation\", 1,     \"001\", 1, \"Gastrointestinal disorders\", \"Difficult digestion\", NA,     \"001\", 2, \"Eye disorders\", \"Eye irritation\", 1,     \"001\", 3, \"Eye disorders\", \"Eye irritation\", 2,     \"001\", 4, \"Eye disorders\", \"Vision blurred\", 2,     # Subject 2 ----------------------------------------------------------------     \"002\", 1, \"Gastrointestinal disorders\", \"Difficult digestion\", 2,     \"002\", 1, \"Gastrointestinal disorders\", \"Reflux\", 2,     \"002\", 2, \"Eye disorders\", \"Vision blurred\", 2,     \"002\", 2, \"Gastrointestinal disorders\", \"Reflux\", 2,     \"002\", 3, \"Gastrointestinal disorders\", \"Reflux\", NA   ) dat #> # A tibble: 10 × 5 #>    subject visit soc                        ae                  grade #>    <chr>   <dbl> <chr>                      <chr>               <dbl> #>  1 001         1 Eye disorders              Eye irritation          1 #>  2 001         1 Gastrointestinal disorders Difficult digestion    NA #>  3 001         2 Eye disorders              Eye irritation          1 #>  4 001         3 Eye disorders              Eye irritation          2 #>  5 001         4 Eye disorders              Vision blurred          2 #>  6 002         1 Gastrointestinal disorders Difficult digestion     2 #>  7 002         1 Gastrointestinal disorders Reflux                  2 #>  8 002         2 Eye disorders              Vision blurred          2 #>  9 002         2 Gastrointestinal disorders Reflux                  2 #> 10 002         3 Gastrointestinal disorders Reflux                 NA"},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"challenges-addressed","dir":"Articles","previous_headings":"","what":"Challenges Addressed","title":"Adverse Event Counting Methods","text":"Study participants without adverse events absent adverse event raw data table. Furthermore, study participants may multiple adverse events, often different severity grades. two features pose difficulties computing percentage participants experience specific adverse event. numerator, need make sure double count AE within participant, denominator need make sure include patients treatment arm (just experience AE). challenges amplified AE terms need roll system organ class summaries. Functions {gtreg} address problems (among others) implementing industry recommended approaches. reading, PHUSE white paper regarding Analysis Displays Associated Adverse events provides excellent summary standards.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"counting-all-events","dir":"Articles","previous_headings":"","what":"Counting All Events","title":"Adverse Event Counting Methods","text":"count instances event, utilize tbl_ae_count. case, two subjects experienced total 5 eye disorders 4 gastrointestinal disorders course multiple time points. statistic allowed tbl_ae_count() n.","code":"dat %>%    tbl_ae_count(     ae = ae,     soc = soc,     by = grade   ) %>%    modify_header(all_ae_cols() ~ \"**Grade {by}**\") %>%    add_overall() %>%    bold_labels()"},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"counting-by-highest-grade","dir":"Articles","previous_headings":"","what":"Counting By Highest Grade","title":"Adverse Event Counting Methods","text":"Rather counting events, typical regulatory reporting count one event per subject highest grade experienced. count highest grade per subject, utilize tbl_ae(). input variable can numeric (e.g., grade 1, 2, 3) factor (e.g. attribution unlikely, possible, definite). respective cases, highest value observed according numeric order factor level order, missing values considered lowest level. counting highest grade, count reported cell exceed number subjects. methods apply individual adverse events system organ class.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"counts-only","dir":"Articles","previous_headings":"Counting By Highest Grade","what":"Counts Only","title":"Adverse Event Counting Methods","text":"","code":"dat %>%    tbl_ae(     id = subject,     ae = ae,     soc = soc,     by = grade,     statistic = \"{n}\"   ) %>%    modify_header(all_ae_cols() ~ \"**Grade {by}**\") %>%    add_overall() %>%    bold_labels()"},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"adverse-events","dir":"Articles","previous_headings":"Counting By Highest Grade > Counts Only","what":"Adverse Events","title":"Adverse Event Counting Methods","text":"Subject 001 experienced two instances grade 1 eye irritation one instance grade 2 eye irritation. maximum grade experienced eye irritation experienced 2, resulting count 1 eye irritation. Subject 001 Subject 002 experienced grade 2 vision blurred, resulting count 2 vision blurred. Subject 002 experienced two instances grade 2 reflux one instance reflux unknown grade; count 1 grade 2 reflux.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"system-organ-class","dir":"Articles","previous_headings":"Counting By Highest Grade > Counts Only","what":"System Organ Class","title":"Adverse Event Counting Methods","text":"Eye disorders Subject 001 contributes 1 count grade 2 eye irritation; together, subject 001 002 contribute 2 counts grade 2 vision blurred. 2 subjects experienced grade 2 eye disorder. 2 subjects overall experienced eye disorder. Gastrointestinal disorders Subject 001 experienced difficult digestion unknown grade, contributes count 1 unknown grade gastrointestinal disorder. Subject 002 experienced grade 2 difficult digestion grade 2 reflux, contributes count 1 grade 2 gastrointestinal disorders. 2 subjects overall experienced gastrointestinal disorder.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/articles/counting-methods.html","id":"counts-with-percents","dir":"Articles","previous_headings":"Counting By Highest Grade","what":"Counts With Percents","title":"Adverse Event Counting Methods","text":"default statistic reported tbl_ae() n (%). percent represents percent subjects present data. adverse event reporting, common subjects experience adverse event, hence included event reporting data set. example, suppose 3 subjects interest study, subject 003 experience adverse event. order get correct subject denominator case, supply tbl_ae() id_df, data frame containing subject ids.","code":"dat %>%    tbl_ae(     id = subject,     ae = ae,     soc = soc,     by = grade   ) %>%    modify_header(all_ae_cols() ~ \"**Grade {by}**\") %>%   modify_spanning_header(all_ae_cols() ~ \"**N = {N}**\") %>%    add_overall() %>%    bold_labels() dat %>%    tbl_ae(     id = subject,     id_df = tibble::tibble(subject = c(\"001\", \"002\", \"003\")),     ae = ae,     soc = soc,     by = grade   ) %>%    modify_header(all_ae_cols() ~ \"**Grade {by}**\") %>%    modify_spanning_header(all_ae_cols() ~ \"**N = {N}**\") %>%    add_overall() %>%    bold_labels()"},{"path":"https://shannonpileggi.github.io/gtreg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shannon Pileggi. Author, maintainer, copyright holder. Daniel D. Sjoberg. Author.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pileggi S, Sjoberg D (2022). gtreg: Regulatory Tables Clinical Research. https://github.com/shannonpileggi/gtreg, https://shannonpileggi.github.io/gtreg/.","code":"@Manual{,   title = {gtreg: Regulatory Tables for Clinical Research},   author = {Shannon Pileggi and Daniel D. Sjoberg},   year = {2022},   note = {https://github.com/shannonpileggi/gtreg, https://shannonpileggi.github.io/gtreg/}, }"},{"path":[]},{"path":"https://shannonpileggi.github.io/gtreg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Regulatory Tables for Clinical Research","text":"can install {gtreg} following code. can install development version {gtreg} GitHub :","code":"install.packages(\"gtreg\") # install.packages(\"devtools\") devtools::install_github(\"shannonpileggi/gtreg\")"},{"path":"https://shannonpileggi.github.io/gtreg/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Regulatory Tables for Clinical Research","text":"{gtreg} package creates tabular data summaries appropriate regulatory submissions. package builds tables using {gtsummary}.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/index.html","id":"functions-for-adverse-event-ae-reporting","dir":"","previous_headings":"","what":"Functions for adverse event (AE) reporting","title":"Regulatory Tables for Clinical Research","text":"Summarize Raw Adverse Counts tbl_ae_count() provides counts AEs, omits percentage statistics multiple AEs can occur per subject.  Summarize Adverse Events Grade tbl_ae() counts one AE per subject maximum grade; percentage statistics provided default denominators reflecting number patients study.  Focus rates high grade complications tbl_ae_focus() also counts one AE per subject maximum grade, convenience summarize dichotomous AE attributes.","code":"library(gtreg) tbl_ae_count <-    df_adverse_events |>    tbl_ae_count(     ae = adverse_event,     soc = system_organ_class,      by = drug_attribution   ) |>   add_overall(across = \"by\") |>   modify_spanning_header(all_ae_cols() ~ \"**Drug Attribution**\") |>   bold_labels() library(gtreg) gtsummary::theme_gtsummary_compact() #> Setting theme `Compact`  tbl_ae <-    df_adverse_events |>   tbl_ae(     id_df = df_patient_characteristics,     id = patient_id,     ae = adverse_event,     soc = system_organ_class,      by = grade,      strata = trt   ) |>   modify_header(all_ae_cols() ~ \"**Grade {by}**\") |>    bold_labels() tbl_ae_focus <-    df_adverse_events |>   tbl_ae_focus(     id_df = df_patient_characteristics,     id = patient_id,     ae = adverse_event,     include = c(any_complication, grade3_complication)   )"},{"path":"https://shannonpileggi.github.io/gtreg/index.html","id":"other-functions-for-clinical-reporting","dir":"","previous_headings":"","what":"Other Functions for Clinical Reporting","title":"Regulatory Tables for Clinical Research","text":"Regulatory summary tbl_reg_summary() creates data summary table often seen regulatory submissions.  Print AE listing tbl_listing() creates gtsummary-class listing data enable grouped printing.","code":"tbl_reg_summary <-   df_patient_characteristics |>   tbl_reg_summary(by = trt, include = c(marker, status)) tbl_listing <-   head(df_adverse_events, n = 10) |>   select(system_organ_class, adverse_event, grade, drug_attribution, patient_id) |>   dplyr::arrange(adverse_event, desc(grade)) |>   tbl_listing(group_by = system_organ_class) |>   bold_labels()"},{"path":"https://shannonpileggi.github.io/gtreg/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Regulatory Tables for Clinical Research","text":"Please note gtreg project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/add_overall_tbl_ae.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate Overall Summary — add_overall_tbl_ae","title":"Tabulate Overall Summary — add_overall_tbl_ae","text":"Tabulate Overall Summary","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/add_overall_tbl_ae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate Overall Summary — add_overall_tbl_ae","text":"","code":"# S3 method for tbl_ae add_overall(x, across = NULL, ...)  # S3 method for tbl_ae_count add_overall(x, across = NULL, ...)  # S3 method for tbl_ae_focus add_overall(x, across = NULL, ...)"},{"path":"https://shannonpileggi.github.io/gtreg/reference/add_overall_tbl_ae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate Overall Summary — add_overall_tbl_ae","text":"x Object class \"tbl_ae\", \"tbl_ae_focus\", \"tbl_ae_count\" across Specify type overall statistics include. \"\" adds summaries across = strata= levels \"\" adds summaries across = levels \"strata\" adds summaries across strata= levels \"overall-\" adds single overall column Default possible overall types. ... used","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/add_overall_tbl_ae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate Overall Summary — add_overall_tbl_ae","text":"Summary object input class","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/add_overall_tbl_ae.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Tabulate Overall Summary — add_overall_tbl_ae","text":"spanning headers modified prior call add_overall(), ordering columns may correct.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/add_overall_tbl_ae.html","id":"example-output","dir":"Reference","previous_headings":"","what":"Example Output","title":"Tabulate Overall Summary — add_overall_tbl_ae","text":"Example 1  Example 2  Example 3  Example 4","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/add_overall_tbl_ae.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate Overall Summary — add_overall_tbl_ae","text":"","code":"# \\donttest{ # Example 1 ----------------------------------------------------------------- add_overall_ex1 <-   df_adverse_events %>%   tbl_ae_count(     ae = adverse_event,     soc = system_organ_class,     by = grade,     strata = trt   ) %>%   add_overall() %>%   modify_header(all_ae_cols() ~ \"**Grade {by}**\") %>%   bold_labels()  # Example 2 ----------------------------------------------------------------- add_overall_ex2 <-   df_adverse_events %>%   tbl_ae(     id = patient_id,     ae = adverse_event,     soc = system_organ_class,     by = grade   ) %>%   add_overall(across = 'by') %>%   modify_header(all_ae_cols() ~ \"**Grade {by}**\") %>%   bold_labels()  # Example 3 ----------------------------------------------------------------- add_overall_ex3 <-   df_adverse_events %>%   tbl_ae_focus(     id = patient_id,     include = c(any_complication, grade3_complication),     ae = adverse_event,     strata = trt   ) %>%   add_overall(across = 'strata')  # Example 4 ----------------------------------------------------------------- add_overall_ex4 <-   df_adverse_events %>%   tbl_ae(     id = patient_id,     ae = adverse_event,     soc = system_organ_class,     by = grade,     strata = trt   ) %>%   add_overall(across = 'overall-only') %>%   modify_header(all_ae_cols() ~ \"**Grade {by}**\") %>%   bold_labels() # }"},{"path":"https://shannonpileggi.github.io/gtreg/reference/df_adverse_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Adverse Event Database — df_adverse_events","title":"Simulated Adverse Event Database — df_adverse_events","text":"data set containing reported AEs trial.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/df_adverse_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Adverse Event Database — df_adverse_events","text":"","code":"df_adverse_events"},{"path":"https://shannonpileggi.github.io/gtreg/reference/df_adverse_events.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Adverse Event Database — df_adverse_events","text":"data frame 100 rows--one row per patient per AE patient_id Patient ID trt Treatment Group system_organ_class System Organ Class adverse_event Adverse Event grade Grade drug_attribution Drug Attribution any_complication Grade Complication grade3_complication Grade 3+ Complication","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/df_patient_characteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Patient Characteristics Database — df_patient_characteristics","title":"Simulated Patient Characteristics Database — df_patient_characteristics","text":"Simulated Patient Characteristics Database","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/df_patient_characteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Patient Characteristics Database — df_patient_characteristics","text":"","code":"df_patient_characteristics"},{"path":"https://shannonpileggi.github.io/gtreg/reference/df_patient_characteristics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Patient Characteristics Database — df_patient_characteristics","text":"data frame 100 rows--one row per patient patient_id Patient ID trt Treatment Group age Patient Age marker Biological Marker status Study Status discontinued Discontinued Study off_trt_ae Treatment Adverse Event","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/dot-complete_ae_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a complete and expanded data frame for tabulating adverse events — .complete_ae_data","title":"Create a complete and expanded data frame for tabulating adverse events — .complete_ae_data","text":"Returns data frame observation patient study, combinations ID, SOC, AE. returned data frame includes new logical columns \"..ae..\"  \"..soc..\" indicating whether row included tabulating AE table. multiple AEs type observed, AE largest = value observation used tabulation.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/dot-complete_ae_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a complete and expanded data frame for tabulating adverse events — .complete_ae_data","text":"","code":".complete_ae_data(   data,   id,   ae,   soc = NULL,   by = NULL,   strata = NULL,   id_df = NULL,   by_values = NULL,   missing_text = \"Unknown\",   missing_location = \"first\" )"},{"path":"https://shannonpileggi.github.io/gtreg/reference/dot-complete_ae_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a complete and expanded data frame for tabulating adverse events — .complete_ae_data","text":"data Data frame id String variable name patient ID ae String variable name adverse event column soc Optional string variable name system organ class column Optional string variable split results , e.g. report AEs grade attribution strata Optional string variable stratify results , e.g. report AEs summaries treatment group id_df Optional data frame complete id values strata achieve correct base n situation subjects experience adverse events by_values Optional vector complete values, listed desired order, achieve correct table structure situation adverse event certain grade observed given soc missing_text String shown missing levels =, Default \"Unknown\" missing_location location column summarizing values missing levels = located final table. Must one c(\"first\", \"last\", \"hide). Default \"first\"","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/dot-complete_ae_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a complete and expanded data frame for tabulating adverse events — .complete_ae_data","text":"tibble","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/dot-complete_ae_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a complete and expanded data frame for tabulating adverse events — .complete_ae_data","text":"","code":"df_adverse_events %>%   .complete_ae_data(     id = \"patient_id\",     ae = \"adverse_event\",     soc = \"system_organ_class\",     by = \"grade\",     strata = \"trt\"   ) #> # A tibble: 126 × 7 #>    id    strata soc                                  ae     by    ..soc.. ..ae.. #>    <chr> <chr>  <fct>                                <chr>  <fct> <lgl>   <lgl>  #>  1 ID 1  Drug B Blood and lymphatic system disorders Anaem… 4     FALSE   TRUE   #>  2 ID 1  Drug B Blood and lymphatic system disorders Incre… 4     FALSE   FALSE  #>  3 ID 1  Drug B Blood and lymphatic system disorders Incre… 5     TRUE    TRUE   #>  4 ID 1  Drug B Blood and lymphatic system disorders Iron … NOT … FALSE   TRUE   #>  5 ID 1  Drug B Blood and lymphatic system disorders Throm… 1     FALSE   FALSE  #>  6 ID 1  Drug B Blood and lymphatic system disorders Throm… 3     FALSE   TRUE   #>  7 ID 1  Drug B Gastrointestinal disorders           Diffi… NOT … FALSE   TRUE   #>  8 ID 1  Drug B Gastrointestinal disorders           Intes… 1     FALSE   FALSE  #>  9 ID 1  Drug B Gastrointestinal disorders           Intes… 2     FALSE   TRUE   #> 10 ID 1  Drug B Gastrointestinal disorders           Myoch… 3     FALSE   FALSE  #> # … with 116 more rows"},{"path":"https://shannonpileggi.github.io/gtreg/reference/gtreg-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gtreg: Regulatory Tables for Clinical Research — gtreg-package","title":"gtreg: Regulatory Tables for Clinical Research — gtreg-package","text":"Creates tables suitable regulatory agency submission leveraging 'gtsummary' package back end. Tables can exported HTML, Word, PDF . Highly customized outputs available utilizing existing styling functions 'gtsummary' well custom options designed regulatory tables.","code":""},{"path":[]},{"path":"https://shannonpileggi.github.io/gtreg/reference/gtreg-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gtreg: Regulatory Tables for Clinical Research — gtreg-package","text":"Maintainer: Shannon Pileggi shannon.pileggi@gmail.com (ORCID) [copyright holder] Authors: Daniel D. Sjoberg danield.sjoberg@gmail.com (ORCID)","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/inline_text_tbl_ae.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Values from gtreg tables in-line — inline_text_tbl_ae","title":"Report Values from gtreg tables in-line — inline_text_tbl_ae","text":"Function allows users report formatted styled results gtreg tables -line.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/inline_text_tbl_ae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Values from gtreg tables in-line — inline_text_tbl_ae","text":"","code":"# S3 method for tbl_ae inline_text(x, row, column = NULL, ...)  # S3 method for tbl_ae_count inline_text(x, row, column = NULL, ...)  # S3 method for tbl_ae_focus inline_text(x, row, column = NULL, ...)"},{"path":"https://shannonpileggi.github.io/gtreg/reference/inline_text_tbl_ae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Values from gtreg tables in-line — inline_text_tbl_ae","text":"x object class tbl_ae(), tbl_ae_count(), tbl_ae_focus() row string indicating AE SOC report column column name cell report. Use show_header_names(x) print column names beside current header. ... used","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/inline_text_tbl_ae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Values from gtreg tables in-line — inline_text_tbl_ae","text":"string","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/inline_text_tbl_ae.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report Values from gtreg tables in-line — inline_text_tbl_ae","text":"","code":"# \\donttest{ tbl <-   df_adverse_events %>%   tbl_ae(     id = patient_id,     ae = adverse_event,     soc = system_organ_class,     by = grade   ) show_header_names(tbl) #>  #> ℹ As a usage guide, the code below re-creates the current column headers. #> modify_header( #>   label = '**Adverse Event**', #>   stat_1 = '**1**', #>   stat_2 = '**2**', #>   stat_3 = '**3**', #>   stat_4 = '**4**', #>   stat_5 = '**5**' #> ) #>  #>  #> Column Name   Column Header      #> ------------  ------------------ #> label         **Adverse Event**  #> stat_1        **1**              #> stat_2        **2**              #> stat_3        **3**              #> stat_4        **4**              #> stat_5        **5**               inline_text(tbl, \"Anaemia\", column = stat_5) #> [1] \"3 (30)\" # }"},{"path":"https://shannonpileggi.github.io/gtreg/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, one_of, select, starts_with, vars gtsummary add_overall, as_flex_table, as_gt, as_hux_table, as_kable, as_kable_extra, bold_labels, bold_labels, bold_levels, inline_text, italicize_labels, italicize_labels, modify_caption, modify_column_indent, modify_footnote, modify_header, modify_spanning_header, show_header_names, style_number, style_percent, style_sigfig knitr knit_print tibble as_tibble","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/selectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Column Selectors — selectors","title":"Column Selectors — selectors","text":"all_ae_cols(overall, unknown) selects columns summarizing AE statistics. default, unknown overall columns selected. all_cols_in_strata(strata) selects columns specified stratum. all_overall_cols() selects overall columns all_unknown_cols() selects unknown columns","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/selectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column Selectors — selectors","text":"","code":"all_ae_cols(overall = FALSE, unknown = FALSE)  all_cols_in_strata(strata)  all_overall_cols()  all_unknown_cols()"},{"path":"https://shannonpileggi.github.io/gtreg/reference/selectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column Selectors — selectors","text":"overall logical indicating whether include overall columns. Default FALSE unknown logical indicating whether include unknown missing columns. Default FALSE strata character vector selected stratum","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/selectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Column Selectors — selectors","text":"selected columns","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/selectors.html","id":"example-output","dir":"Reference","previous_headings":"","what":"Example Output","title":"Column Selectors — selectors","text":"Example 1","code":""},{"path":[]},{"path":"https://shannonpileggi.github.io/gtreg/reference/selectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column Selectors — selectors","text":"","code":"# \\donttest{ selectors_ex1 <-   df_adverse_events %>%   dplyr::mutate(grade = ifelse(dplyr::row_number() == 1L, NA, grade)) %>%   tbl_ae(     id = patient_id,     ae = adverse_event,     soc = system_organ_class,     by = grade   ) %>%   add_overall(across = 'by') %>%   modify_header(     all_ae_cols() ~ \"**Grade {by}**\",     all_overall_cols() ~ \"**Total**\",     all_unknown_cols() ~ \"**Unknown Grade**\"   ) # }"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate Adverse Events — tbl_ae","title":"Tabulate Adverse Events — tbl_ae","text":"function tabulates adverse events. One AE per ID counted resulting table. = variable passed patient experienced one AE, AE associated highest = level included. example, patient two AE = grade, AE highest grade included. Similarly, tabulations within system organ class requested, AE within SOC associated highest grade tabulated.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate Adverse Events — tbl_ae","text":"","code":"tbl_ae(   data,   id,   ae,   soc = NULL,   by = NULL,   strata = NULL,   id_df = NULL,   statistic = \"{n} ({p})\",   by_values = NULL,   digits = NULL,   sort = NULL,   zero_symbol = \"—\",   missing_location = c(\"first\", \"last\", \"hide\") )"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate Adverse Events — tbl_ae","text":"data Data frame id Variable name patient ID ae Variable name adverse event column soc Variable name system organ class column Variable split results , e.g. report AEs grade strata Variable stratify results , e.g. report AEs summaries treatment group id_df Optional data frame complete id values strata achieve correct base n situation subjects experience adverse events. See df_patient_characteristics example id_df pairs df_adverse_events. statistic String indicating statistics reported. default \"{n} ({p})\" by_values Optional vector complete values, listed desired order, achieve correct table structure situation adverse event certain grade observed given soc digits Specifies number decimal places round summary statistics. default integers shown zero decimal places, percentages formatted style_percent(). like modify either , pass vector integers indicating number decimal places round statistics. example, statistic calculated \"{n} ({p}%)\" want percent rounded 2 decimal places use digits = c(0, 2). User may also pass styling function: digits = style_sigfig sort Controls order AEs SOCs output table. default NULL, AEs SOCs sorted alphanumerically (factors sorted according factor level). Use sort = \"ae\" sort AEs decreasing frequency order, sort = \"soc\" sort SOCs decreasing order, sort = c(\"ae\", \"soc\") sort . AEs sorted within SOC. zero_symbol String used represent cells zero counts. Default em-dash (\"\\U2014\"). Using zero_symbol = NULL print zero count statistics, e.g. \"0 (0)\" missing_location location column summarizing values missing levels = located final table. Must one c(\"first\", \"last\", \"hide). Default \"first\"","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate Adverse Events — tbl_ae","text":"'tbl_ae' object","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae.html","id":"example-output","dir":"Reference","previous_headings":"","what":"Example Output","title":"Tabulate Adverse Events — tbl_ae","text":"Example 1  Example 2","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate Adverse Events — tbl_ae","text":"","code":"# \\donttest{ # Example 1 ----------------------------------------------------------------- tbl_ae_ex1 <-   df_adverse_events %>%   tbl_ae(     id = patient_id,     ae = adverse_event,     soc = system_organ_class,     by = grade,     strata = trt   ) %>%   modify_header(all_ae_cols() ~ \"**Grade {by}**\")  # Example 2 ----------------------------------------------------------------- tbl_ae_ex2 <-   df_adverse_events %>%   tbl_ae(     id = patient_id,     ae = adverse_event,     by = grade   ) %>%   modify_header(all_ae_cols() ~ \"**Grade {by}**\") # }"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate Raw AE Counts — tbl_ae_count","title":"Tabulate Raw AE Counts — tbl_ae_count","text":"Create table counting AEs.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate Raw AE Counts — tbl_ae_count","text":"","code":"tbl_ae_count(   data,   ae,   soc = NULL,   by = NULL,   strata = NULL,   by_values = NULL,   digits = NULL,   sort = NULL,   zero_symbol = \"—\",   missing_location = c(\"first\", \"last\", \"hide\") )"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate Raw AE Counts — tbl_ae_count","text":"data Data frame ae Variable name adverse event column soc Variable name system organ class column Variable split results , e.g. report AEs grade strata Variable stratify results , e.g. report AEs summaries treatment group by_values Optional vector complete values, listed desired order, achieve correct table structure situation adverse event certain grade observed given soc digits Specifies number decimal places round summary statistics. default integers shown zero decimal places, percentages formatted style_percent(). like modify either , pass vector integers indicating number decimal places round statistics. example, statistic calculated \"{n} ({p}%)\" want percent rounded 2 decimal places use digits = c(0, 2). User may also pass styling function: digits = style_sigfig sort Controls order AEs SOCs output table. default NULL, AEs SOCs sorted alphanumerically (factors sorted according factor level). Use sort = \"ae\" sort AEs decreasing frequency order, sort = \"soc\" sort SOCs decreasing order, sort = c(\"ae\", \"soc\") sort . AEs sorted within SOC. zero_symbol String used represent cells zero counts. Default em-dash (\"\\U2014\"). Using zero_symbol = NULL print zero count statistics, e.g. \"0 (0)\" missing_location location column summarizing values missing levels = located final table. Must one c(\"first\", \"last\", \"hide). Default \"first\"","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate Raw AE Counts — tbl_ae_count","text":"'tbl_ae_count' object","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tabulate Raw AE Counts — tbl_ae_count","text":"tbl_ae_count counts AEs (whereas tbl_ae counts maximum grade). Thus, tbl_ae_count provide percentages multiple AEs can counted per subject.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_count.html","id":"example-output","dir":"Reference","previous_headings":"","what":"Example Output","title":"Tabulate Raw AE Counts — tbl_ae_count","text":"Example 1","code":""},{"path":[]},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate Raw AE Counts — tbl_ae_count","text":"","code":"# \\donttest{ # Example 1 ----------------------------------------------------------------- tbl_ae_count_ex1 <-   tbl_ae_count(     data = df_adverse_events,     ae = adverse_event,     soc = system_organ_class,     strata = trt,     by = grade   ) %>%   modify_header(all_ae_cols() ~ \"**Grade {by}**\")   # }"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_focus.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate AE Focused (Dichotomous) Summaries — tbl_ae_focus","title":"Tabulate AE Focused (Dichotomous) Summaries — tbl_ae_focus","text":"Summarize dichotomous AE data. example, report rate patients AE Grade 3 higher.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_focus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate AE Focused (Dichotomous) Summaries — tbl_ae_focus","text":"","code":"tbl_ae_focus(   data,   include,   id,   ae,   soc = NULL,   strata = NULL,   label = NULL,   id_df = NULL,   statistic = \"{n} ({p})\",   digits = NULL,   sort = NULL,   zero_symbol = \"—\" )"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_focus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate AE Focused (Dichotomous) Summaries — tbl_ae_focus","text":"data Data frame include Vector column names summarize. Column names may quoted unquoted. columns must class 'logical'. id Variable name patient ID ae Variable name adverse event column soc Variable name system organ class column strata Variable stratify results , e.g. report AEs summaries treatment group label named list labels applied resulting table. Names must passed include=. Default NULL, either label attribute column name used. id_df Optional data frame complete id values strata achieve correct base n situation subjects experience adverse events. See df_patient_characteristics example id_df pairs df_adverse_events. statistic String indicating statistics reported. default \"{n} ({p})\" digits Specifies number decimal places round summary statistics. default integers shown zero decimal places, percentages formatted style_percent(). like modify either , pass vector integers indicating number decimal places round statistics. example, statistic calculated \"{n} ({p}%)\" want percent rounded 2 decimal places use digits = c(0, 2). User may also pass styling function: digits = style_sigfig sort Controls order AEs SOCs output table. default NULL, AEs SOCs sorted alphanumerically (factors sorted according factor level). Use sort = \"ae\" sort AEs decreasing frequency order, sort = \"soc\" sort SOCs decreasing order, sort = c(\"ae\", \"soc\") sort . AEs sorted within SOC. zero_symbol String used represent cells zero counts. Default em-dash (\"\\U2014\"). Using zero_symbol = NULL print zero count statistics, e.g. \"0 (0)\"","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_focus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate AE Focused (Dichotomous) Summaries — tbl_ae_focus","text":"'tbl_ae_focus' object","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_focus.html","id":"example-output","dir":"Reference","previous_headings":"","what":"Example Output","title":"Tabulate AE Focused (Dichotomous) Summaries — tbl_ae_focus","text":"Example 1","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_ae_focus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate AE Focused (Dichotomous) Summaries — tbl_ae_focus","text":"","code":"# \\donttest{ # Example 1 ----------------------------------------------------------------- tbl_ae_focus_ex1 <-   df_adverse_events %>%   tbl_ae_focus(     include = c(any_complication, grade3_complication),     id = patient_id,     ae = adverse_event,     soc = system_organ_class,     label =       list(any_complication = \"Any Grade Complication\",            grade3_complication = \"Grade 3+ Complication\")   ) %>%   bold_labels()   # }"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_listing.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Listing Table — tbl_listing","title":"Data Listing Table — tbl_listing","text":"Function creates gtsummary-class listing data. Column labels used column headers, present. listing prints observations order input data.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_listing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Listing Table — tbl_listing","text":"","code":"tbl_listing(data, group_by = NULL, bold_headers = TRUE)"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_listing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Listing Table — tbl_listing","text":"data data frame group_by Single variable name indicating grouping variable. Default NULL grouping variable. specified, grouping row added first column. See details . bold_headers logical indicating whether bold column headers. Default TRUE","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_listing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Listing Table — tbl_listing","text":"gtsummary data listing","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_listing.html","id":"group-by","dir":"Reference","previous_headings":"","what":"group_by","title":"Data Listing Table — tbl_listing","text":"grouping column first column table combined type/class may converted common type/class columns. However, either group_by= column first column factors, factor column(s) first converted character. groups ordered according grouping variable's type (.e.,  character, numeric, factor).","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_listing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data Listing Table — tbl_listing","text":"purpose tbl_listing() add support printing data frames, taking advantage {gtsummary} defaults, e.g. ability print output formats, using print themes common style tables document, etc. output tbl_listing() class 'gtsummary', tables meant merged 'gtsummary' tables tbl_merge(), reporting table contents inline_text(). reason proper 'gtsummary' contains additional, hidden structure present result tbl_listing(). need report results tbl_listing() -line, recommended convert table data frame, extract needed cell, e.g.","code":"tbl_listing() |>   as_tibble(col_names = FALSE) |>   dplyr::slice(1) |>   dplyr::pull(colname)`"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_listing.html","id":"example-output","dir":"Reference","previous_headings":"","what":"Example Output","title":"Data Listing Table — tbl_listing","text":"Example 1  Example 2","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_listing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Listing Table — tbl_listing","text":"","code":"library(dplyr, warn.conflicts = FALSE)  tbl_listing_ex1 <-   head(df_adverse_events, n = 10) %>%   select(system_organ_class, adverse_event, grade, drug_attribution, patient_id) %>%   arrange(adverse_event, desc(grade)) %>%   tbl_listing(group_by = system_organ_class) %>%   bold_labels()  set.seed(11234) tbl_listing_ex2 <- df_patient_characteristics %>%   dplyr::slice_sample(n = 10) %>%   select(patient_id, status, discontinued, off_trt_ae) %>%   tbl_listing() %>%   as_gt() %>%   gt::opt_row_striping()"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_reg_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Summary Table — tbl_reg_summary","title":"Data Summary Table — tbl_reg_summary","text":"Function wraps gtsummary::tbl_summary() create data summary table often seen regulatory submissions. Continuous variable summaries shown multiple lines additional summary statistics percentages shown categorical variables; precision levels estimated based values observed.","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_reg_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Summary Table — tbl_reg_summary","text":"","code":"tbl_reg_summary(   data,   by = NULL,   label = NULL,   statistic = NULL,   digits = NULL,   type = NULL,   value = NULL,   missing = c(\"no\", \"yes\", \"ifany\"),   missing_text = NULL,   sort = NULL,   percent = NULL,   include = everything() )"},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_reg_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Summary Table — tbl_reg_summary","text":"data data frame column name (quoted unquoted) data. Summary statistics calculated separately level variable (e.g. = trt). NULL, summary statistics calculated using observations. label List formulas specifying variables labels, e.g. list(age ~ \"Age\", stage ~ \"Path T Stage\").  variable's label specified , label attribute (attr(data$age, \"label\")) used.  attribute label NULL, variable name used. statistic List formulas specifying types summary statistics display variable. digits List formulas specifying number decimal places round summary statistics. specified, tbl_summary guesses appropriate number decimals round statistics. multiple statistics displayed single variable, supply vector rather integer.  example, statistic calculated \"{mean} ({sd})\" want mean rounded 1 decimal place, SD 2 use digits = list(age ~ c(1, 2)). User may also pass styling function: digits = age ~ style_sigfig type List formulas specifying variable types. Accepted values c(\"continuous\", \"continuous2\", \"categorical\", \"dichotomous\"), e.g. type = list(age ~ \"continuous\", female ~ \"dichotomous\"). type specified variable, function default appropriate summary type. value List formulas specifying value display dichotomous variables. gtsummary selectors, e.g. all_dichotomous(), used argument. missing Indicates whether include counts NA values table. Allowed values \"\" (never display NA values), \"ifany\" (display NA values), \"always\" (includes NA count row variables). Default \"ifany\". missing_text String display count missing observations. Default \"Unknown\". sort List formulas specifying type sorting perform categorical data. Options frequency results sorted descending order frequency alphanumeric, e.g. sort = list(everything() ~ \"frequency\") percent Indicates type percentage return. Must one \"column\", \"row\", \"cell\". Default \"column\". include variables include summary table. Default everything()","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_reg_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Summary Table — tbl_reg_summary","text":"'tbl_reg_summary' object","code":""},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_reg_summary.html","id":"example-output","dir":"Reference","previous_headings":"","what":"Example Output","title":"Data Summary Table — tbl_reg_summary","text":"Example 1","code":""},{"path":[]},{"path":"https://shannonpileggi.github.io/gtreg/reference/tbl_reg_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Summary Table — tbl_reg_summary","text":"","code":"tbl_reg_summary_ex1 <-   df_patient_characteristics %>%   tbl_reg_summary(by = trt, include = c(marker, status))"},{"path":"https://shannonpileggi.github.io/gtreg/news/index.html","id":"gtreg-development-version","dir":"Changelog","previous_headings":"","what":"gtreg (development version)","title":"gtreg (development version)","text":"Allow special characters, like “” followed space. (#174) Updated structure package longer use tbl_stack() internally, improving speed. (#126)","code":""},{"path":"https://shannonpileggi.github.io/gtreg/news/index.html","id":"gtreg-011","dir":"Changelog","previous_headings":"","what":"gtreg 0.1.1","title":"gtreg 0.1.1","text":"CRAN release: 2022-08-17 Fix tbl_ae_count() individual stratum complete unobserved data SOC AE. (#165) Fix denominator tbl_ae_focus() system organ class level. (#163)","code":""},{"path":"https://shannonpileggi.github.io/gtreg/news/index.html","id":"gtreg-010","dir":"Changelog","previous_headings":"","what":"gtreg 0.1.0","title":"gtreg 0.1.0","text":"CRAN release: 2022-08-10 Initial release.","code":""}]
